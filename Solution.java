import java.io.*;
import java.util.Arrays;

class Solution{
    public static void main(String[] args){
        int[] a = {900, 724, 827, 495, 531, 271, 800, 795, 974, 572, 36, 720, 296, 112, 61, 762, 367, 874, 770, 314, 124, 825, 59, 
        406, 414, 253, 552, 418, 235, 342, 779, 301, 37, 102, 496, 122, 170, 718, 47, 719, 369, 259, 869, 831, 475, 662, 260, 588, 
        423, 146, 127, 103, 93, 131, 469, 435, 583, 375, 772, 543, 135, 914, 224, 892, 677, 537, 965, 975, 980, 611, 578, 429, 219, 
        978, 207, 423, 278, 495, 704, 17, 945, 6, 677, 152, 744, 707, 563, 933, 386, 163, 34, 858, 34, 846, 5, 40, 527, 150, 335, 157, 
        900, 760, 723, 478, 152, 385, 709, 945, 370, 54, 154, 192, 77, 123, 981, 204, 77, 335, 722, 824, 993, 247, 898, 34, 382, 312, 
        796, 390, 748, 856, 286, 949, 287, 282, 841, 255, 994, 723, 586, 778, 731, 87, 416, 575, 805, 183, 429, 889, 975, 436, 117, 289, 
        478, 794, 351, 149, 883, 618, 55, 903, 540, 319, 31, 250, 379, 254, 369, 342, 81, 190, 915, 512, 645, 56, 422, 724, 172, 580, 48, 
        431, 82, 866, 765, 402, 940, 100, 343, 499, 935, 956, 801, 114, 945, 336, 625, 205, 642, 227, 723, 42, 720, 739, 53, 255, 34, 318, 
        24, 516, 742, 445, 306, 923, 476, 516, 442, 687, 759, 998, 585, 305, 716, 16, 469, 580, 273, 286, 959, 707, 654, 899, 725, 479, 61, 
        601, 815, 993, 925, 114, 564, 608, 957, 207, 814, 897, 226, 525, 672, 407, 793, 869, 341, 791, 134, 311, 787, 985, 559, 494, 320, 74, 
        256, 776, 137, 889, 295, 178, 181, 287, 174, 350, 95, 583, 965, 657, 350, 16, 404, 183, 953, 350, 150, 586, 807, 327, 307, 418, 504, 
        61, 406, 495, 861, 256, 652, 59, 436, 108, 701, 932, 667, 302, 837, 582, 585, 515, 722, 365, 941, 835, 131, 612, 793, 7, 133, 895, 91, 700, 
        544, 202, 704, 387, 678, 640, 275, 657, 454, 428, 590, 869, 231, 172, 743, 700, 360, 679, 560, 408, 919, 700, 20, 749, 557, 674, 92, 336, 
        74, 828, 539, 828, 73, 341, 651, 354, 203, 604, 111, 787, 158, 326, 204, 710, 984, 992, 469, 126, 359, 425, 221, 926, 890, 359, 752, 
        518, 240, 829, 744, 762, 530, 843, 706, 766, 647, 464, 472, 447, 169, 160, 966, 452, 26, 272, 44, 351, 960, 336, 940, 140, 648, 507, 
        485, 218, 299};
        System.out.println("----------- before sorting ---------------");
        System.out.println(Arrays.toString(a));
        System.out.println("----------- after sorting ---------------");
        heapSort(a);
        System.out.println(Arrays.toString(a));

        int[] b = {2,1};
        System.out.println("----------- before sorting ---------------");
        System.out.println(Arrays.toString(b));
        System.out.println("----------- after sorting ---------------");
        heapSort(b);
        System.out.println(Arrays.toString(b));

        int[] c = {};
        System.out.println("----------- before sorting ---------------");
        System.out.println(Arrays.toString(c));
        System.out.println("----------- after sorting ---------------");
        heapSort(c);
        System.out.println(Arrays.toString(c));

        int[] d = {100,1000,1000,100};
        System.out.println("----------- before sorting ---------------");
        System.out.println(Arrays.toString(d));
        System.out.println("----------- after sorting ---------------");
        heapSort(d);
        System.out.println(Arrays.toString(d));
    }

    static void heapSort(int[] a){
        Heap heap = new Heap();
        heap.createHeap(a);
        int i=0;
        while(heap.getHead()!=null){
            Node min = heap.extractMin();
            a[i] = min.getValue();
            i++;
        }
    }

}